spring:
  kafka:
    #kafka server的地址，集群配多个，中间，逗号隔开
    bootstrap-servers: localhost:29092
    producer:
      retries: 3
      #这里是按字节计算，不是消息个数，即 16384 bytes
      batch-size: 16384
      #32MB的批处理缓冲区，按照字节计算
      buffer-memory: 33554432
      #键的序列化器
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #值的序列化器
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      #0:   生产者的消息在成功写入所有节点之前不会收到任何来自服务器的响应
      #1:   生产者的消息只需要成功写入Leader节点就会收到一个来自服务器的成功响应
      #all: 生产者的消息只有成功写入所有节点才会收到一个来自服务器的成功响应
      acks: 1
    consumer:
      #默认消费者组
      group-id: msa-kafka-example
      #该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      #latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      #earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      #批量一次最大拉取数据量
      max-poll-records: 4000
      #是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      #自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      #键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      #在侦听器容器中运行的线程数
      concurrency: 5
      #listener负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false

kafka:
  topic:
    group: msa-kafka-example
    name: msa-one-topic