version: '3.9'
services:
  # https://hub.docker.com/_/mysql
  msa-mysql:
    container_name: msa-mysql
    #hostname: msa-mysql
    image: mysql:8.0.32
    #command: "--default-authentication-plugin=mysql_native_password" # 可以放配置文件中
    #restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - "23306:3306"
    volumes:
      - ./mysql/conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
      - ./mysql/data:/var/lib/mysql
      - ./mysql/sql:/docker-entrypoint-initdb.d   # 容器首次初始化阶段会执行内部的  .sh .sql .sql.gz
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    networks:
      - msa-action-network

  # https://hub.docker.com/_/phpmyadmin
  msa-phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: msa-phpmyadmin
    hostname: msa-phpmyadmin
    ports:
      - "20080:80"
    environment:
      - PMA_HOST=msa-mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=123456
    networks:
      - msa-action-network
    depends_on:
      msa-mysql:
        condition: service_healthy

  # https://hub.docker.com/_/redis
  msa-redis:
    container_name: msa-redis
    image: redis:6.2.13
    hostname: redis
    privileged: true
    ports:
      - "26379:6379"
    volumes:
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      #- ./redis/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - msa-action-network

  # Redis 控制台 https://github.com/joeferner/redis-commander
  # 账密 admin/admin
  msa-redis-admin:
    container_name: msa-redis-admin
    image: spryker/redis-commander:0.8.0
    hostname: redis-commander
    #restart: always
    ports:
      - "26391:8081"
    environment:
      # https://github.com/joeferner/redis-commander?tab=readme-ov-file#valid-host-strings-used-for-redis_hosts
      - REDIS_HOST=msa-redis
      - REDIS_PASSWORD=123456
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
      - LANG=C.UTF-8
      - LANGUAGE=C.UTF-8
      - LC_ALL=C.UTF-8
    networks:
      - msa-action-network
    depends_on:
      msa-redis:
        condition: service_healthy

  # https://hub.docker.com/r/nacos/nacos-server
  msa-nacos:
    container_name: msa-nacos
    image: nacos/nacos-server:v2.2.3-slim
    ports:
      - "28848:8848"
      - "29848:9848"
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=msa-mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    #volumes:
    #  - ./nacos/conf/application.properties:/home/nacos/conf/application.properties
    networks:
      - msa-action-network
    depends_on:
      msa-mysql:
        condition: service_healthy

  msa-zookeeper:
    image: zookeeper:3.9.0
    container_name: msa-zookeeper
    #restart: always
    ports:
      - "22181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=msa-zookeeper:2888:3888;2181
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
      TZ: Asia/Shanghai
    networks:
      - msa-action-network

  msa-kafka:
    image: bitnami/kafka:3.7.0
    container_name: msa-kafka
    volumes:
      - /etc/localtime:/etc/localtime
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      #服务本地启动（如在IDEA中启动）连接Docker内部的kafka, 会发现监听器无法连接到kafka,
      #调试发现监听器连接kafka时连接的是msa-kafka:9092, 需要将host（msa-kafka）转成IP地址，但是本地无法使用docker的域名解析，本地应用打包成镜像后则可以，
      #需要手动配置kafka的域名映射，比如 172.18.0.6 msa-kafka， 可以通过 SwitchHosts 工具维护
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://msa-kafka:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: msa-zookeeper:2181
      #如果只启动一个Kafka节点，这里副本数应该设置为1,否则启动会报错
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_MESSAGE_MAX_BYTES: "2000000"
      KAFKA_ENABLE_KRAFT: no
      JMX_PORT: 9999
      TZ: Asia/Shanghai
    networks:
      - msa-action-network
    depends_on:
      - msa-zookeeper

  msa-kafka-eagle:
    image: echo21bash/kafka-eagle:3.0.2
    container_name: msa-kafka-eagle
    environment:
      KAFKA_EAGLE_ZK_LIST: msa-zookeeper:2181
    volumes:
      - ./kafka-eagle/system-config.properties:/opt/kafka-eagle/conf/system-config.properties
    ports:
      - "28048:8048"
    networks:
      - msa-action-network
    depends_on:
      - msa-kafka

networks:
  msa-action-network:
    name: msa-action-network  # 不指定名称的话总是会将当前文件夹名作为网络名前缀
    driver: bridge
